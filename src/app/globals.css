@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Lighthaus';
  src:
    url('/fonts/lighthaus/lighthaus.woff2') format('woff2'),
    url('/fonts/lighthaus/lighthaus.woff') format('woff'),
    url('/fonts/lighthaus/lighthaus.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  .perspective-1000 {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .rotateY-180 {
    transform: rotateY(180deg);
  }

  .rotateX-180 {
    transform: rotateX(180deg);
  }

  /* Custom class for adaptive background color alternation */
  /* This custom class `.__responsive-bg-checker` is designed to implement an adaptive background color alternation strategy across different screen sizes. It applies a Zinc-100 background for odd-numbered items and a white background for even-numbered items by default. Through media queries, it adjusts the pattern to create a checkerboard effect on medium (md:) devices by alternating background colors every two items, and returns to the standard alternation on extra large (xl:) devices, accommodating the layout changes with different numbers of items per row. */
  .__responsive-bg-checker {
    background-color: #f4f4f5; /* Zinc-100 background for odd-numbered items by default */
  }

  .__responsive-bg-checker:nth-child(even) {
    background-color: #ffffff; /* Background for even items by default */
  }

  /* Media queries for md: devices */
  @media (min-width: 768px) {
    /* Checkerboard logic for two items per row */
    .__responsive-bg-checker:nth-child(4n + 1),
    .__responsive-bg-checker:nth-child(4n + 4) {
      background-color: #ffffff; /* Start with a white background */
    }
    .__responsive-bg-checker:nth-child(4n + 2),
    .__responsive-bg-checker:nth-child(4n + 3) {
      background-color: #f4f4f5; /* Next two items have a Zinc-100 background */
    }
  }

  /* Media queries for xl: devices */
  @media (min-width: 1280px) {
    /* Returning to alternate backgrounds per item starting with white */
    .__responsive-bg-checker:nth-child(odd) {
      background-color: #ffffff; /* Odd items have a white background */
    }
    .__responsive-bg-checker:nth-child(even) {
      background-color: #f4f4f5; /* Even items have a Zinc-100 background */
    }
  }

  /* Custom header button animation */
  .__button-custom {
    background-color: transparent;
    border: 1px solid white;
    transition: all 0.5s ease-in-out;
  }
  .__button-custom:hover {
    border-color: #470960;
    background-size: 200% 200%;
    background-image: radial-gradient(circle, #470960 0%, #7c2248 100%);
  }
  .__button-custom:focus {
    border-color: #7c2248;
    outline: none;
    box-shadow: 0 0 0 4px #47096066;
  }
  .__button-custom:active {
    background-color: #7c2248;
    border-color: #470960;
  }

  .btn-9::before,
  .btn-9::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 0;
    background-color: rgba(
      156,
      163,
      175,
      0.5
    ); /* Серый цвет для наложения, используйте классы цветов Tailwind в RGBA */
    transition:
      height 0.4s ease-in-out,
      background-color 0.4s ease-in-out;
    z-index: 1;
  }

  .btn-9::before {
    top: 0;
    transition-delay: 0s;
  }

  .btn-9::after {
    bottom: 0;
    transition-delay: 0.2s; /* Задержка для анимации второго элемента */
  }

  .btn-9:hover::before,
  .btn-9:hover::after {
    height: 50%; /* Высота каждого наложения при наведении */
  }

  .btn-9:hover::before {
    background-color: rgba(
      59,
      130,
      246,
      0.5
    ); /* Синий цвет наложения при наведении */
  }

  .btn-9:hover::after {
    background-color: rgba(
      249,
      115,
      22,
      0.5
    ); /* Оранжевый цвет наложения при наведении */
  }

  .btn-9:hover span {
    color: #374151; /* Изменение цвета текста при наведении, темно-серый */
  }
}
